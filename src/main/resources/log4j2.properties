# Root logger
rootLogger=INFO, STDOUT, LOGFILE

# Console appender
appender.console.type = Console
appender.console.name = STDOUT
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = info
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%highlight{%level}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue}] %msg%n

# File appender
appender.file.type = File
appender.file.name = LOGFILE
appender.file.Append = false
appender.file.fileName = generator.log
appender.file.filter.threshold.type = ThresholdFilter
appender.file.filter.threshold.level = debug
appender.file.layout.type = PatternLayout
appender.file.layout.disableAnsi = false
appender.file.layout.pattern = %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} [%15.15t] %-40.40C{1.} : %m%n%ex

# Loggers
logger.couchbase.name = com.couchbase
logger.couchbase.level = ERROR
logger.couchbase.additivity = false
logger.couchbase.appenderRef.console.ref = STDOUT
#
logger.netty.name = io.netty
logger.netty.level = ERROR
logger.netty.additivity = false
logger.netty.appenderRef.console.ref = STDOUT
#
logger.langchain.name = dev.ai4j
logger.langchain.level = warn
logger.langchain.additivity = false
logger.langchain.appenderRefs = file
#